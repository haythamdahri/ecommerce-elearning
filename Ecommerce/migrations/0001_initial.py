# Generated by Django 2.1.4 on 2018-12-19 10:47

import Ecommerce.models
import ckeditor.fields
import colorful.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, max_length=60000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_hex', colorful.fields.RGBColorField()),
            ],
        ),
        migrations.CreateModel(
            name='Compare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=6000)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('file', models.FileField(upload_to=Ecommerce.models.PathAndRename('images/2018/12/19'))),
            ],
        ),
        migrations.CreateModel(
            name='MessageSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('tel', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date_add', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ecommerce.Color')),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(default='Created', max_length=200)),
                ('payment_method', models.CharField(choices=[('Cash On Delivery', 'Cash On Delivery'), ('Paypal', 'Paypal')], default='Cash On Delivery', max_length=20)),
                ('delivery_method', models.CharField(choices=[('Free Shipping', 'Free Shipping'), ('Flat Shipping Rate', 'Flat Shipping Rate')], default='Free Shipping', max_length=20)),
                ('comment', models.TextField(blank=True, default='')),
                ('track_number', models.CharField(blank=True, max_length=300, null=True)),
                ('date_payment', models.DateField(blank=True, null=True)),
                ('date_complete', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor.fields.RichTextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('order_date', models.DateField(default=datetime.timedelta(days=3))),
                ('status', models.CharField(default='Created', max_length=200)),
                ('payment_method', models.CharField(choices=[('Cash On Delivery', 'Cash On Delivery'), ('Paypal', 'Paypal')], default='Cash On Delivery', max_length=20)),
                ('comment', models.TextField(blank=True, default='')),
                ('date_payment', models.DateField(blank=True, null=True)),
                ('date_complete', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('add_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=False)),
                ('number_views', models.IntegerField(default=0)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Brand')),
                ('category', models.ManyToManyField(to='Ecommerce.Category')),
                ('images', models.ManyToManyField(to='Ecommerce.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.IntegerField()),
                ('date_end', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_daily', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Product')),
            ],
        ),
        migrations.CreateModel(
            name='SCategroy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Category')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1200, unique=True)),
                ('description', models.CharField(max_length=25000)),
                ('is_active', models.BooleanField(default=True)),
                ('brands', models.ManyToManyField(to='Ecommerce.Brand')),
                ('images', models.ManyToManyField(to='Ecommerce.Image')),
                ('products', models.ManyToManyField(to='Ecommerce.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=520)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_profile', models.ImageField(upload_to=Ecommerce.models.PathAndRename('images/2018/12/19'))),
                ('image_cover', models.ImageField(upload_to=Ecommerce.models.PathAndRename('images/2018/12/19'))),
                ('create_date', models.DateField(default=django.utils.timezone.now)),
                ('number_visitors', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, max_length=60000)),
                ('images', models.ManyToManyField(to='Ecommerce.Image')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('first_quantity', models.IntegerField(default=0)),
                ('price_sup', models.DecimalField(decimal_places=2, max_digits=15)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Product')),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Product')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='software',
            field=models.ManyToManyField(to='Ecommerce.Software'),
        ),
        migrations.AddField(
            model_name='profile',
            name='shoppings',
            field=models.ManyToManyField(to='Ecommerce.Shop'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderservice',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ecommerce.Profile'),
        ),
        migrations.AddField(
            model_name='orderservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Service'),
        ),
        migrations.AddField(
            model_name='orderproduct',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ecommerce.Profile'),
        ),
        migrations.AddField(
            model_name='orderline',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ecommerce.OrderProduct'),
        ),
        migrations.AddField(
            model_name='orderline',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Ecommerce.Product'),
        ),
        migrations.AddField(
            model_name='messagesupplier',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Shop'),
        ),
        migrations.AddField(
            model_name='description',
            name='product',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Product'),
        ),
        migrations.AddField(
            model_name='compare',
            name='products',
            field=models.ManyToManyField(to='Ecommerce.Product'),
        ),
        migrations.AddField(
            model_name='compare',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Profile'),
        ),
        migrations.AddField(
            model_name='category',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Image'),
        ),
        migrations.AddField(
            model_name='cart',
            name='color',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Color'),
        ),
        migrations.AddField(
            model_name='cart',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Product'),
        ),
        migrations.AddField(
            model_name='cart',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ecommerce.Profile'),
        ),
    ]
